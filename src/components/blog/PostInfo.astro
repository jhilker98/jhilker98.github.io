---
import type { CollectionEntry } from "astro:content";
import { Icon } from "astro-icon";
import { formatPostDate, calcReadingTime, slugifyPostDate } from "@lib/utils";

interface Props {
  post: CollectionEntry<"blog">;
  wordCount: number;
}
const { post, wordCount } = Astro.props as Props;

import { marked } from "marked";

const body = `${post.body
  .split(" ")
  .slice(0, wordCount + 1)
  .join(" ")}...`;
const postBody = marked.parse(body, { mangle: false, headerIds: false });
---

<article class="py-4 flex flex-wrap md:flex-nowrap">
  <div class="md:w-72 md:mb-0 -mb-2 align-baseline">
    <Icon name="mdi:calendar" class="inline-block -mt-px text-sm w-4 h-4" />
    <span class="ml-1 font-bold text-sm text-gray-700 dark:text-gray-400"
      >Posted:
    </span>
    <time
      datetime={post.data.pubDate.toISOString()}
      class="font-semibold text-sm text-gray-700 dark:text-gray-400"
      >{formatPostDate(post.data.pubDate)}</time
    >
    {
      post.data.draft ? (
        <div class="block bg-branding-navy text-white daisy-badge mt-2">
          Draft
        </div>
      ) : (
        ""
      )
    }

    <span
      class="block mt-1 text-branding-gray-600 dark:text-branding-gray-400 text-sm font-semibold">
      <Icon name="mdi:clock-outline" class="inline-block w-4 h-4 -mt-1 mr-1" />
      {calcReadingTime(post.body)}
    </span>
  </div>
  <div class="md:flex-grow">
    <h2
      class="text-2xl font-medium text-gray-900 title-font mb-2 font-serif dark:text-white">
      {post.data.title}
    </h2>
    <div
      class="prose prose-neutral dark:prose-invert max-w-[80ch]"
      set:html={postBody}
    />
    <a
      href={`/blog/${slugifyPostDate(post.data.pubDate)}/${post.slug}`}
      class="block rounded-sm text-sm bg-branding-navy-600 w-fit text-white h-fit px-2 py-1 mt-1 dark:hover:bg-branding-navy-500 duration-100 transition-colors hover:bg-branding-navy-700"
      >Read More</a
    >
  </div>
</article>
