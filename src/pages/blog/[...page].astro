---
import type { GetStaticPaths } from "astro";
import BaseLayout from "~/layouts/BaseLayout.astro";
import PostInfo from "~/components/blog/PostInfo.astro";
import { getCollection, type CollectionEntry } from "astro:content";
import Pagination from "~/components/Pagination.astro";
import { RECENT_POST_COUNT } from "~/consts";
import type { BlogPost } from "~/content/config.ts";
export const getStaticPaths = (async ({ paginate }) => {
  const posts: CollectionEntry<"blog">[] = await getCollection(
    "blog",
    ({ data }) => {
      return import.meta.env.PROD ? data.draft !== true : true;
    },
  );
  posts.sort((a, b) => b.data.pubDate.getTime() - a.data.pubDate.getTime());
  return paginate(posts, { pageSize: RECENT_POST_COUNT });
}) satisfies GetStaticPaths;

const { page } = Astro.props;
---

<BaseLayout title="Blog" description="All the blog posts on my site.">
  <section
    class="min-h-full grid grid-rows-[1fr_auto] container mx-auto px-5 overflow-hidden">
    <div class="divide-y-2 divide-gray-500">
      {
        page.data.map((post: BlogPost) => (
          <PostInfo post={post} wordCount={33} />
        ))
      }
    </div>
    <Pagination prevUrl={page.url.prev} nextUrl={page.url.next} />
  </section>
</BaseLayout>
