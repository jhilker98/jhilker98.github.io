---
/** eslint-disable jsx-a11y/heading-has-content */
import BaseLayout from "@layouts/BaseLayout.astro";
import "@fontsource/ibm-plex-serif/700.css";
---

<BaseLayout title="Search results" description="Search results">
  <section class="p-2">
    <!-- // eslint-disable-next-line jsx-a11y/heading-has-content -->
    <p
      class="font-serif text-4xl font-bold text-branding-black dark:text-branding-white"
      id="searchReadout">
    </p>
    <article id="searchResults"></article>
  </section>
  <script>
    // imports
    import DOMPurify from "dompurify";
    let SEARCH_DATA;
    const SPINNER = `<svg xmlns="http://www.w3.org/2000/svg" width="32" height="32" viewBox="0 0 24 24" class="h-10 w-10 fill-branding-blue"><path d="M12,23a9.63,9.63,0,0,1-8-9.5,9.51,9.51,0,0,1,6.79-9.1A1.66,1.66,0,0,0,12,2.81h0a1.67,1.67,0,0,0-1.94-1.64A11,11,0,0,0,12,23Z"><animateTransform attributeName="transform" dur="0.75s" repeatCount="indefinite" type="rotate" values="0 12 12;360 12 12"/></path></svg>`;
    // selectors
    const search = document.querySelector("#search");
    const searchReadout = document.querySelector("#searchReadout");
    const searchResults = document.querySelector("#searchResults");
    // functions
    function updateDocumentTitle(search) {
      document.title = search
        ? `Search results for “${search}” | Jacob Hilker: Frontend Developer`
        : "Search the Blog | Jacob Hilker: Frontend Developer";
    }

    function updateSearchReadout(search) {
      searchReadout.textContent = search
        ? `Search Results for “${search}”`
        : "Search the blog";
    }

    async function fetchSearchResults(search) {
      if (search.length === 0) return;
      searchResults.innerHTML = SPINNER;
      if (!SEARCH_DATA) {
        try {
          const res = await fetch("/search.json");
          if (!res.ok) {
            throw new Error("Something went wrong…please try again");
          }
          const data = await res.json();
          SEARCH_DATA = data;
        } catch (e) {
          console.error(e);
        }
      }
    }

    // event listeners
    window.addEventListener("DOMContentLoaded", () => {
      const urlParams = DOMPurify.sanitize(
        new URLSearchParams(window.location.search).get("q"),
      );
      fetchSearchResults(urlParams);
      updateDocumentTitle(urlParams);
      updateSearchReadout(urlParams);
      search.value = urlParams;
      search.focus();
    });

    search.addEventListener("input", () => {
      const searchTerm = DOMPurify.sanitize(search.value);
      updateDocumentTitle(searchTerm);
      updateSearchReadout(searchTerm);
      fetchSearchResults(searchTerm);
    });
  </script>
</BaseLayout>
