---
import type { GetStaticPaths } from "astro";
import { getCollection } from "astro:content";
import BaseLayout from "@layouts/BaseLayout.astro";
findPostsInSeries;
import { slugifyUrl } from "@lib/utils";
import type { BlogPost } from "@content/config.ts";
import PostInfo from "@components/blog/PostInfo.astro";
import { findPostsInSeries } from "@lib/blog";
export const getStaticPaths = async () => {
  const allPosts = await getCollection("blog");
  const uniqueSeries = [
    ...new Set(allPosts.map((post) => post.data?.series).flat()),
  ].filter((series) => series != undefined);

  return uniqueSeries.map((series) => {
    const filteredPosts = allPosts
      .filter((post) => post.data.series?.name == series!.name)
      .sort(
        (a: BlogPost, b: BlogPost) =>
          a.data.series?.weight - b.data.series?.weight,
      );

    return {
      params: { series: slugifyUrl(series!.name) },
      props: { series, posts: filteredPosts },
    };
  });
};
const { seriesName } = Astro.params;
const { series, posts } = Astro.props;
---

<BaseLayout title={series!.name} description="Series description">
  <article
    class="p-2 prose prose-neutral dark:prose-invert prose-h1:mb-2 max-w-[80ch]">
    <h1>{series!.name}</h1>
    {series!.description}
  </article>
  <section class="min-h-screen text-gray-600">
    <div class="container mx-auto px-5 h-screen">
      <div class="divide-y-2 divide-gray-500">
        {posts.map((post: BlogPost) => <PostInfo post={post} wordCount={35} />)}
      </div>
    </div>
  </section>
</BaseLayout>
