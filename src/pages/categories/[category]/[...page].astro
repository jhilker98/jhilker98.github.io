---
import type { GetStaticPaths } from "astro";

import { getCollection } from "astro:content";
import { slugifyUrl, toTitleCase } from "~/lib/utils";
import type { BlogPost } from "~/content.config";

import BaseLayout from "~/layouts/BaseLayout.astro";
import PostInfo from "~/components/blog/PostInfo.astro";
import Pagination from "~/components/Pagination.astro";

export async function getStaticPaths({ paginate }) {
  const allPosts = await getCollection("blog");
  const uniqueCats = [
    ...new Set(allPosts.map((post) => post.data?.categories).flat()),
  ].filter((category) => category !== undefined);

  return uniqueCats.flatMap((category) => {
    const filteredPosts = allPosts.filter((post) =>
      post.data.categories?.includes(category!),
    );
    return paginate(filteredPosts, {
      params: { category: slugifyUrl(category) },
      props: { category, slug: slugifyUrl(category) },
      pageSize: 4,
    });
  });
}

const { category } = Astro.params;
const { page } = Astro.props;
---

<BaseLayout
  title=`Category: ${toTitleCase(category)}`
  description={`All blog posts categorized with ${category}`}>
  <article class="p-2 prose prose-neutral dark:prose-invert prose-h1:mb-2">
    <h1>Category: {toTitleCase(category)}</h1>
  </article>
  <section class="min-h-screen text-gray-600">
    <div class="container mx-auto px-5 h-screen">
      <div class="divide-y-2 divide-gray-500">
        {
          page.data.map((post: BlogPost) => (
            <PostInfo post={post} wordCount={35} />
          ))
        }
      </div>
      <Pagination prevUrl={page.url.prev} nextUrl={page.url.next} />
    </div>
  </section>
</BaseLayout>
